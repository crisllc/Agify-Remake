{"ast":null,"code":"var _jsxFileName = \"/home/cris/Agify-Remake/src/components/HeroComponents/HeroSearch.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Stack, TextField, Menu, MenuItem } from \"@mui/material\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: \"Global\",\n  code: \"üåç\"\n}, {\n  name: \"United States\",\n  code: \"US\"\n}, {\n  name: \"United Kingdom\",\n  code: \"GB\"\n}, {\n  name: \"Canada\",\n  code: \"CA\"\n}, {\n  name: \"Japan\",\n  code: \"JP\"\n}];\nexport default function HeroSearch({\n  onClick,\n  setName,\n  name,\n  dropDownOpen,\n  setDropDownOpen,\n  selectedCountry,\n  setSelectedCountry\n}) {\n  _s();\n  const buttonRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        position: \"absolute\",\n        top: \"350px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: buttonRef,\n        onClick: () => setDropDownOpen(!dropDownOpen),\n        sx: {\n          marginLeft: \"10px\",\n          border: \"1px solid\"\n        },\n        children: selectedCountry.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: buttonRef.current,\n        open: dropDownOpen,\n        onClose: () => setDropDownOpen(false),\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => setSelectedCountry(country),\n          children: `${country.code}:${country.name}`\n        }, country.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"First or full name\",\n        variant: \"outlined\",\n        value: name,\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClick,\n        sx: {\n          marginLeft: \"10px\",\n          border: \"1px solid\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(HeroSearch, \"PvhYvZjqGdFMi5KDqD8tkkFprO8=\");\n_c = HeroSearch;\nvar _c;\n$RefreshReg$(_c, \"HeroSearch\");","map":{"version":3,"names":["Button","Stack","TextField","Menu","MenuItem","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","countries","name","code","HeroSearch","onClick","setName","dropDownOpen","setDropDownOpen","selectedCountry","setSelectedCountry","_s","buttonRef","children","direction","sx","justifyContent","textAlign","position","top","ref","marginLeft","border","fileName","_jsxFileName","lineNumber","columnNumber","anchorEl","current","open","onClose","map","country","label","variant","value","onChange","event","target","_c","$RefreshReg$"],"sources":["/home/cris/Agify-Remake/src/components/HeroComponents/HeroSearch.jsx"],"sourcesContent":["import { Button, Stack, TextField, Menu, MenuItem } from \"@mui/material\";\r\nimport { useRef } from \"react\";\r\n\r\nconst countries = [\r\n  { name: \"Global\", code: \"üåç\" },\r\n  { name: \"United States\", code: \"US\" },\r\n  { name: \"United Kingdom\", code: \"GB\" },\r\n  { name: \"Canada\", code: \"CA\" },\r\n  { name: \"Japan\", code: \"JP\" },\r\n];\r\n\r\nexport default function HeroSearch({\r\n  onClick,\r\n  setName,\r\n  name,\r\n  dropDownOpen,\r\n  setDropDownOpen,\r\n  selectedCountry,\r\n  setSelectedCountry,\r\n}) {\r\n  const buttonRef = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n          position: \"absolute\",\r\n          top: \"350px\",\r\n        }}\r\n      >\r\n        <button\r\n          ref={buttonRef}\r\n          onClick={() => setDropDownOpen(!dropDownOpen)}\r\n          sx={{\r\n            marginLeft: \"10px\",\r\n            border: \"1px solid\",\r\n          }}\r\n        >\r\n          {selectedCountry.code}\r\n        </button>\r\n        <Menu\r\n          anchorEl={buttonRef.current}\r\n          open={dropDownOpen}\r\n          onClose={() => setDropDownOpen(false)}\r\n        >\r\n          {countries.map((country) => (\r\n            <MenuItem\r\n              onClick={() => setSelectedCountry(country)}\r\n              key={country.code}\r\n            >\r\n              {`${country.code}:${country.name}`}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <TextField\r\n          label=\"First or full name\"\r\n          variant=\"outlined\"\r\n          value={name}\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={onClick}\r\n          sx={{\r\n            marginLeft: \"10px\",\r\n            border: \"1px solid\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}